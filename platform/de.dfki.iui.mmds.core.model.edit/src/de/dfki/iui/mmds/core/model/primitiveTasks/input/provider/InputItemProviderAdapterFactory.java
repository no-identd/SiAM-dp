/*******************************************************************************
 * The Creative Commons CC-BY-NC 4.0 License
 * http://creativecommons.org/licenses/by-nc/4.0/legalcode
 *
 * Creative Commons (CC) by DFKI GmbH
 * - Vanessa Hahn <Vanessa.Hahn@dfki.de>
 * - Robert Nesselrath <rnesselrath@gmail.com>
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, 
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND 
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT 
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, 
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING 
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR 
 * OTHER DEALINGS IN THE SOFTWARE.
 *
 *******************************************************************************/
/**
 */
package de.dfki.iui.mmds.core.model.primitiveTasks.input.provider;

import de.dfki.iui.mmds.core.model.primitiveTasks.input.util.InputAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class InputItemProviderAdapterFactory extends InputAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public InputItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.PrimitiveInputTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PrimitiveInputTaskItemProvider primitiveInputTaskItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.PrimitiveInputTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPrimitiveInputTaskAdapter() {
		if (primitiveInputTaskItemProvider == null) {
			primitiveInputTaskItemProvider = new PrimitiveInputTaskItemProvider(this);
		}

		return primitiveInputTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.ZoomTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ZoomTaskItemProvider zoomTaskItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.ZoomTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createZoomTaskAdapter() {
		if (zoomTaskItemProvider == null) {
			zoomTaskItemProvider = new ZoomTaskItemProvider(this);
		}

		return zoomTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.PanTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PanTaskItemProvider panTaskItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.PanTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPanTaskAdapter() {
		if (panTaskItemProvider == null) {
			panTaskItemProvider = new PanTaskItemProvider(this);
		}

		return panTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.ScrollTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ScrollTaskItemProvider scrollTaskItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.ScrollTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createScrollTaskAdapter() {
		if (scrollTaskItemProvider == null) {
			scrollTaskItemProvider = new ScrollTaskItemProvider(this);
		}

		return scrollTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.IntraDocumentNavigationTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IntraDocumentNavigationTaskItemProvider intraDocumentNavigationTaskItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.IntraDocumentNavigationTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIntraDocumentNavigationTaskAdapter() {
		if (intraDocumentNavigationTaskItemProvider == null) {
			intraDocumentNavigationTaskItemProvider = new IntraDocumentNavigationTaskItemProvider(this);
		}

		return intraDocumentNavigationTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.DialogFlowDirectionalNavigationTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DialogFlowDirectionalNavigationTaskItemProvider dialogFlowDirectionalNavigationTaskItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.DialogFlowDirectionalNavigationTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDialogFlowDirectionalNavigationTaskAdapter() {
		if (dialogFlowDirectionalNavigationTaskItemProvider == null) {
			dialogFlowDirectionalNavigationTaskItemProvider = new DialogFlowDirectionalNavigationTaskItemProvider(this);
		}

		return dialogFlowDirectionalNavigationTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.DialogFlowForwardNavigationTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DialogFlowForwardNavigationTaskItemProvider dialogFlowForwardNavigationTaskItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.DialogFlowForwardNavigationTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDialogFlowForwardNavigationTaskAdapter() {
		if (dialogFlowForwardNavigationTaskItemProvider == null) {
			dialogFlowForwardNavigationTaskItemProvider = new DialogFlowForwardNavigationTaskItemProvider(this);
		}

		return dialogFlowForwardNavigationTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.DialogFlowBackwardNavigationTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DialogFlowBackwardNavigationTaskItemProvider dialogFlowBackwardNavigationTaskItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.DialogFlowBackwardNavigationTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDialogFlowBackwardNavigationTaskAdapter() {
		if (dialogFlowBackwardNavigationTaskItemProvider == null) {
			dialogFlowBackwardNavigationTaskItemProvider = new DialogFlowBackwardNavigationTaskItemProvider(this);
		}

		return dialogFlowBackwardNavigationTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.DialogFlowStartNavigationTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DialogFlowStartNavigationTaskItemProvider dialogFlowStartNavigationTaskItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.DialogFlowStartNavigationTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDialogFlowStartNavigationTaskAdapter() {
		if (dialogFlowStartNavigationTaskItemProvider == null) {
			dialogFlowStartNavigationTaskItemProvider = new DialogFlowStartNavigationTaskItemProvider(this);
		}

		return dialogFlowStartNavigationTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.DialogFlowEndNavigationTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DialogFlowEndNavigationTaskItemProvider dialogFlowEndNavigationTaskItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.DialogFlowEndNavigationTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDialogFlowEndNavigationTaskAdapter() {
		if (dialogFlowEndNavigationTaskItemProvider == null) {
			dialogFlowEndNavigationTaskItemProvider = new DialogFlowEndNavigationTaskItemProvider(this);
		}

		return dialogFlowEndNavigationTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.DialogFlowRandomNavigationTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DialogFlowRandomNavigationTaskItemProvider dialogFlowRandomNavigationTaskItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.DialogFlowRandomNavigationTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDialogFlowRandomNavigationTaskAdapter() {
		if (dialogFlowRandomNavigationTaskItemProvider == null) {
			dialogFlowRandomNavigationTaskItemProvider = new DialogFlowRandomNavigationTaskItemProvider(this);
		}

		return dialogFlowRandomNavigationTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.DialogFlowCancelNavigationTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DialogFlowCancelNavigationTaskItemProvider dialogFlowCancelNavigationTaskItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.DialogFlowCancelNavigationTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDialogFlowCancelNavigationTaskAdapter() {
		if (dialogFlowCancelNavigationTaskItemProvider == null) {
			dialogFlowCancelNavigationTaskItemProvider = new DialogFlowCancelNavigationTaskItemProvider(this);
		}

		return dialogFlowCancelNavigationTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.DialogFlowLabelNavigationTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DialogFlowLabelNavigationTaskItemProvider dialogFlowLabelNavigationTaskItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.DialogFlowLabelNavigationTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDialogFlowLabelNavigationTaskAdapter() {
		if (dialogFlowLabelNavigationTaskItemProvider == null) {
			dialogFlowLabelNavigationTaskItemProvider = new DialogFlowLabelNavigationTaskItemProvider(this);
		}

		return dialogFlowLabelNavigationTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.CommandInvocationTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CommandInvocationTaskItemProvider commandInvocationTaskItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.CommandInvocationTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCommandInvocationTaskAdapter() {
		if (commandInvocationTaskItemProvider == null) {
			commandInvocationTaskItemProvider = new CommandInvocationTaskItemProvider(this);
		}

		return commandInvocationTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.MenuInvocationTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MenuInvocationTaskItemProvider menuInvocationTaskItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.MenuInvocationTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMenuInvocationTaskAdapter() {
		if (menuInvocationTaskItemProvider == null) {
			menuInvocationTaskItemProvider = new MenuInvocationTaskItemProvider(this);
		}

		return menuInvocationTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.ItemActivationTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ItemActivationTaskItemProvider itemActivationTaskItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.ItemActivationTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createItemActivationTaskAdapter() {
		if (itemActivationTaskItemProvider == null) {
			itemActivationTaskItemProvider = new ItemActivationTaskItemProvider(this);
		}

		return itemActivationTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.ItemRearrangementTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ItemRearrangementTaskItemProvider itemRearrangementTaskItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.ItemRearrangementTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createItemRearrangementTaskAdapter() {
		if (itemRearrangementTaskItemProvider == null) {
			itemRearrangementTaskItemProvider = new ItemRearrangementTaskItemProvider(this);
		}

		return itemRearrangementTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.ExpandInformationTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExpandInformationTaskItemProvider expandInformationTaskItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.ExpandInformationTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExpandInformationTaskAdapter() {
		if (expandInformationTaskItemProvider == null) {
			expandInformationTaskItemProvider = new ExpandInformationTaskItemProvider(this);
		}

		return expandInformationTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.ASRErrorCorrectionTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ASRErrorCorrectionTaskItemProvider asrErrorCorrectionTaskItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.ASRErrorCorrectionTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createASRErrorCorrectionTaskAdapter() {
		if (asrErrorCorrectionTaskItemProvider == null) {
			asrErrorCorrectionTaskItemProvider = new ASRErrorCorrectionTaskItemProvider(this);
		}

		return asrErrorCorrectionTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.TextSelectionTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TextSelectionTaskItemProvider textSelectionTaskItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.TextSelectionTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTextSelectionTaskAdapter() {
		if (textSelectionTaskItemProvider == null) {
			textSelectionTaskItemProvider = new TextSelectionTaskItemProvider(this);
		}

		return textSelectionTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.ProactivityInvocationTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProactivityInvocationTaskItemProvider proactivityInvocationTaskItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.ProactivityInvocationTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProactivityInvocationTaskAdapter() {
		if (proactivityInvocationTaskItemProvider == null) {
			proactivityInvocationTaskItemProvider = new ProactivityInvocationTaskItemProvider(this);
		}

		return proactivityInvocationTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.ExpanationExpansionTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExpanationExpansionTaskItemProvider expanationExpansionTaskItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.ExpanationExpansionTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExpanationExpansionTaskAdapter() {
		if (expanationExpansionTaskItemProvider == null) {
			expanationExpansionTaskItemProvider = new ExpanationExpansionTaskItemProvider(this);
		}

		return expanationExpansionTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.RevertAdaptationTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RevertAdaptationTaskItemProvider revertAdaptationTaskItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.RevertAdaptationTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRevertAdaptationTaskAdapter() {
		if (revertAdaptationTaskItemProvider == null) {
			revertAdaptationTaskItemProvider = new RevertAdaptationTaskItemProvider(this);
		}

		return revertAdaptationTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.FreeTextEntryTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FreeTextEntryTaskItemProvider freeTextEntryTaskItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.FreeTextEntryTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFreeTextEntryTaskAdapter() {
		if (freeTextEntryTaskItemProvider == null) {
			freeTextEntryTaskItemProvider = new FreeTextEntryTaskItemProvider(this);
		}

		return freeTextEntryTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.DateTimeEntryTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DateTimeEntryTaskItemProvider dateTimeEntryTaskItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.DateTimeEntryTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDateTimeEntryTaskAdapter() {
		if (dateTimeEntryTaskItemProvider == null) {
			dateTimeEntryTaskItemProvider = new DateTimeEntryTaskItemProvider(this);
		}

		return dateTimeEntryTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.IntegerNumberEntryTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IntegerNumberEntryTaskItemProvider integerNumberEntryTaskItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.IntegerNumberEntryTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIntegerNumberEntryTaskAdapter() {
		if (integerNumberEntryTaskItemProvider == null) {
			integerNumberEntryTaskItemProvider = new IntegerNumberEntryTaskItemProvider(this);
		}

		return integerNumberEntryTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.BoundedIntegerNumberEntryTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BoundedIntegerNumberEntryTaskItemProvider boundedIntegerNumberEntryTaskItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.BoundedIntegerNumberEntryTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBoundedIntegerNumberEntryTaskAdapter() {
		if (boundedIntegerNumberEntryTaskItemProvider == null) {
			boundedIntegerNumberEntryTaskItemProvider = new BoundedIntegerNumberEntryTaskItemProvider(this);
		}

		return boundedIntegerNumberEntryTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.DecimalNumberEntryTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DecimalNumberEntryTaskItemProvider decimalNumberEntryTaskItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.DecimalNumberEntryTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDecimalNumberEntryTaskAdapter() {
		if (decimalNumberEntryTaskItemProvider == null) {
			decimalNumberEntryTaskItemProvider = new DecimalNumberEntryTaskItemProvider(this);
		}

		return decimalNumberEntryTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.YesNoSelectionTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected YesNoSelectionTaskItemProvider yesNoSelectionTaskItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.YesNoSelectionTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createYesNoSelectionTaskAdapter() {
		if (yesNoSelectionTaskItemProvider == null) {
			yesNoSelectionTaskItemProvider = new YesNoSelectionTaskItemProvider(this);
		}

		return yesNoSelectionTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.TriStateSelectionTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TriStateSelectionTaskItemProvider triStateSelectionTaskItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.TriStateSelectionTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTriStateSelectionTaskAdapter() {
		if (triStateSelectionTaskItemProvider == null) {
			triStateSelectionTaskItemProvider = new TriStateSelectionTaskItemProvider(this);
		}

		return triStateSelectionTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.ListItemSelectionTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ListItemSelectionTaskItemProvider listItemSelectionTaskItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.ListItemSelectionTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createListItemSelectionTaskAdapter() {
		if (listItemSelectionTaskItemProvider == null) {
			listItemSelectionTaskItemProvider = new ListItemSelectionTaskItemProvider(this);
		}

		return listItemSelectionTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.ListItemMultiSelectionTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ListItemMultiSelectionTaskItemProvider listItemMultiSelectionTaskItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.ListItemMultiSelectionTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createListItemMultiSelectionTaskAdapter() {
		if (listItemMultiSelectionTaskItemProvider == null) {
			listItemMultiSelectionTaskItemProvider = new ListItemMultiSelectionTaskItemProvider(this);
		}

		return listItemMultiSelectionTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.MessageDismissalTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MessageDismissalTaskItemProvider messageDismissalTaskItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.MessageDismissalTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMessageDismissalTaskAdapter() {
		if (messageDismissalTaskItemProvider == null) {
			messageDismissalTaskItemProvider = new MessageDismissalTaskItemProvider(this);
		}

		return messageDismissalTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.ObjectSelectionTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ObjectSelectionTaskItemProvider objectSelectionTaskItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.primitiveTasks.input.ObjectSelectionTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createObjectSelectionTaskAdapter() {
		if (objectSelectionTaskItemProvider == null) {
			objectSelectionTaskItemProvider = new ObjectSelectionTaskItemProvider(this);
		}

		return objectSelectionTaskItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (primitiveInputTaskItemProvider != null) primitiveInputTaskItemProvider.dispose();
		if (zoomTaskItemProvider != null) zoomTaskItemProvider.dispose();
		if (panTaskItemProvider != null) panTaskItemProvider.dispose();
		if (scrollTaskItemProvider != null) scrollTaskItemProvider.dispose();
		if (intraDocumentNavigationTaskItemProvider != null) intraDocumentNavigationTaskItemProvider.dispose();
		if (dialogFlowDirectionalNavigationTaskItemProvider != null) dialogFlowDirectionalNavigationTaskItemProvider.dispose();
		if (dialogFlowForwardNavigationTaskItemProvider != null) dialogFlowForwardNavigationTaskItemProvider.dispose();
		if (dialogFlowBackwardNavigationTaskItemProvider != null) dialogFlowBackwardNavigationTaskItemProvider.dispose();
		if (dialogFlowStartNavigationTaskItemProvider != null) dialogFlowStartNavigationTaskItemProvider.dispose();
		if (dialogFlowEndNavigationTaskItemProvider != null) dialogFlowEndNavigationTaskItemProvider.dispose();
		if (dialogFlowRandomNavigationTaskItemProvider != null) dialogFlowRandomNavigationTaskItemProvider.dispose();
		if (dialogFlowCancelNavigationTaskItemProvider != null) dialogFlowCancelNavigationTaskItemProvider.dispose();
		if (dialogFlowLabelNavigationTaskItemProvider != null) dialogFlowLabelNavigationTaskItemProvider.dispose();
		if (commandInvocationTaskItemProvider != null) commandInvocationTaskItemProvider.dispose();
		if (menuInvocationTaskItemProvider != null) menuInvocationTaskItemProvider.dispose();
		if (itemActivationTaskItemProvider != null) itemActivationTaskItemProvider.dispose();
		if (itemRearrangementTaskItemProvider != null) itemRearrangementTaskItemProvider.dispose();
		if (expandInformationTaskItemProvider != null) expandInformationTaskItemProvider.dispose();
		if (asrErrorCorrectionTaskItemProvider != null) asrErrorCorrectionTaskItemProvider.dispose();
		if (textSelectionTaskItemProvider != null) textSelectionTaskItemProvider.dispose();
		if (proactivityInvocationTaskItemProvider != null) proactivityInvocationTaskItemProvider.dispose();
		if (expanationExpansionTaskItemProvider != null) expanationExpansionTaskItemProvider.dispose();
		if (revertAdaptationTaskItemProvider != null) revertAdaptationTaskItemProvider.dispose();
		if (freeTextEntryTaskItemProvider != null) freeTextEntryTaskItemProvider.dispose();
		if (dateTimeEntryTaskItemProvider != null) dateTimeEntryTaskItemProvider.dispose();
		if (integerNumberEntryTaskItemProvider != null) integerNumberEntryTaskItemProvider.dispose();
		if (boundedIntegerNumberEntryTaskItemProvider != null) boundedIntegerNumberEntryTaskItemProvider.dispose();
		if (decimalNumberEntryTaskItemProvider != null) decimalNumberEntryTaskItemProvider.dispose();
		if (yesNoSelectionTaskItemProvider != null) yesNoSelectionTaskItemProvider.dispose();
		if (triStateSelectionTaskItemProvider != null) triStateSelectionTaskItemProvider.dispose();
		if (listItemSelectionTaskItemProvider != null) listItemSelectionTaskItemProvider.dispose();
		if (listItemMultiSelectionTaskItemProvider != null) listItemMultiSelectionTaskItemProvider.dispose();
		if (messageDismissalTaskItemProvider != null) messageDismissalTaskItemProvider.dispose();
		if (objectSelectionTaskItemProvider != null) objectSelectionTaskItemProvider.dispose();
	}

}
