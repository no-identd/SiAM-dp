/*******************************************************************************
 * The Creative Commons CC-BY-NC 4.0 License
 * http://creativecommons.org/licenses/by-nc/4.0/legalcode
 *
 * Creative Commons (CC) by DFKI GmbH
 * - Vanessa Hahn <Vanessa.Hahn@dfki.de>
 * - Robert Nesselrath <rnesselrath@gmail.com>
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, 
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND 
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT 
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, 
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING 
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR 
 * OTHER DEALINGS IN THE SOFTWARE.
 *
 *******************************************************************************/
/**
 */
package de.dfki.iui.mmds.core.model.base.provider;

import de.dfki.iui.mmds.core.model.base.util.BaseAdapterFactory;
import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class BaseItemProviderAdapterFactory extends BaseAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public BaseItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.base.BObject} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BObjectItemProvider bObjectItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.base.BObject}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBObjectAdapter() {
		if (bObjectItemProvider == null) {
			bObjectItemProvider = new BObjectItemProvider(this);
		}

		return bObjectItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.base.Entity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EntityItemProvider entityItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.base.Entity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEntityAdapter() {
		if (entityItemProvider == null) {
			entityItemProvider = new EntityItemProvider(this);
		}

		return entityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.base.KnowledgeBase} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected KnowledgeBaseItemProvider knowledgeBaseItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.base.KnowledgeBase}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createKnowledgeBaseAdapter() {
		if (knowledgeBaseItemProvider == null) {
			knowledgeBaseItemProvider = new KnowledgeBaseItemProvider(this);
		}

		return knowledgeBaseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.base.KnowledgeBaseEntry} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected KnowledgeBaseEntryItemProvider knowledgeBaseEntryItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.base.KnowledgeBaseEntry}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createKnowledgeBaseEntryAdapter() {
		if (knowledgeBaseEntryItemProvider == null) {
			knowledgeBaseEntryItemProvider = new KnowledgeBaseEntryItemProvider(this);
		}

		return knowledgeBaseEntryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.base.Session} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SessionItemProvider sessionItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.base.Session}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSessionAdapter() {
		if (sessionItemProvider == null) {
			sessionItemProvider = new SessionItemProvider(this);
		}

		return sessionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.base.NumberEntity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NumberEntityItemProvider numberEntityItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.base.NumberEntity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNumberEntityAdapter() {
		if (numberEntityItemProvider == null) {
			numberEntityItemProvider = new NumberEntityItemProvider(this);
		}

		return numberEntityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.base.Nothing} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NothingItemProvider nothingItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.base.Nothing}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNothingAdapter() {
		if (nothingItemProvider == null) {
			nothingItemProvider = new NothingItemProvider(this);
		}

		return nothingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.base.NamedEntity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NamedEntityItemProvider namedEntityItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.base.NamedEntity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNamedEntityAdapter() {
		if (namedEntityItemProvider == null) {
			namedEntityItemProvider = new NamedEntityItemProvider(this);
		}

		return namedEntityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.base.Resource} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ResourceItemProvider resourceItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.base.Resource}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createResourceAdapter() {
		if (resourceItemProvider == null) {
			resourceItemProvider = new ResourceItemProvider(this);
		}

		return resourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.base.Person} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PersonItemProvider personItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.base.Person}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPersonAdapter() {
		if (personItemProvider == null) {
			personItemProvider = new PersonItemProvider(this);
		}

		return personItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.base.CyberPhysicalEnvironment} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CyberPhysicalEnvironmentItemProvider cyberPhysicalEnvironmentItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.base.CyberPhysicalEnvironment}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCyberPhysicalEnvironmentAdapter() {
		if (cyberPhysicalEnvironmentItemProvider == null) {
			cyberPhysicalEnvironmentItemProvider = new CyberPhysicalEnvironmentItemProvider(this);
		}

		return cyberPhysicalEnvironmentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.base.DigitalResource} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DigitalResourceItemProvider digitalResourceItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.base.DigitalResource}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDigitalResourceAdapter() {
		if (digitalResourceItemProvider == null) {
			digitalResourceItemProvider = new DigitalResourceItemProvider(this);
		}

		return digitalResourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.base.PhysicalResource} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PhysicalResourceItemProvider physicalResourceItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.base.PhysicalResource}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPhysicalResourceAdapter() {
		if (physicalResourceItemProvider == null) {
			physicalResourceItemProvider = new PhysicalResourceItemProvider(this);
		}

		return physicalResourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.base.LocatableEntity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LocatableEntityItemProvider locatableEntityItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.base.LocatableEntity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLocatableEntityAdapter() {
		if (locatableEntityItemProvider == null) {
			locatableEntityItemProvider = new LocatableEntityItemProvider(this);
		}

		return locatableEntityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.base.EntityResource} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EntityResourceItemProvider entityResourceItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.base.EntityResource}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEntityResourceAdapter() {
		if (entityResourceItemProvider == null) {
			entityResourceItemProvider = new EntityResourceItemProvider(this);
		}

		return entityResourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.base.LocalizationResource} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LocalizationResourceItemProvider localizationResourceItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.base.LocalizationResource}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLocalizationResourceAdapter() {
		if (localizationResourceItemProvider == null) {
			localizationResourceItemProvider = new LocalizationResourceItemProvider(this);
		}

		return localizationResourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.base.ServiceResource} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ServiceResourceItemProvider serviceResourceItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.base.ServiceResource}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createServiceResourceAdapter() {
		if (serviceResourceItemProvider == null) {
			serviceResourceItemProvider = new ServiceResourceItemProvider(this);
		}

		return serviceResourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.base.MediaResource} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MediaResourceItemProvider mediaResourceItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.base.MediaResource}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMediaResourceAdapter() {
		if (mediaResourceItemProvider == null) {
			mediaResourceItemProvider = new MediaResourceItemProvider(this);
		}

		return mediaResourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.base.Picture} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PictureItemProvider pictureItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.base.Picture}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPictureAdapter() {
		if (pictureItemProvider == null) {
			pictureItemProvider = new PictureItemProvider(this);
		}

		return pictureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.base.Video} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VideoItemProvider videoItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.base.Video}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVideoAdapter() {
		if (videoItemProvider == null) {
			videoItemProvider = new VideoItemProvider(this);
		}

		return videoItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.base.Document} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DocumentItemProvider documentItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.base.Document}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDocumentAdapter() {
		if (documentItemProvider == null) {
			documentItemProvider = new DocumentItemProvider(this);
		}

		return documentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.base.Audio} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AudioItemProvider audioItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.base.Audio}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAudioAdapter() {
		if (audioItemProvider == null) {
			audioItemProvider = new AudioItemProvider(this);
		}

		return audioItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.base.StyleSheet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StyleSheetItemProvider styleSheetItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.base.StyleSheet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStyleSheetAdapter() {
		if (styleSheetItemProvider == null) {
			styleSheetItemProvider = new StyleSheetItemProvider(this);
		}

		return styleSheetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.base.Event} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EventItemProvider eventItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.base.Event}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEventAdapter() {
		if (eventItemProvider == null) {
			eventItemProvider = new EventItemProvider(this);
		}

		return eventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.base.Location} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LocationItemProvider locationItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.base.Location}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLocationAdapter() {
		if (locationItemProvider == null) {
			locationItemProvider = new LocationItemProvider(this);
		}

		return locationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.base.GeoCoordinate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GeoCoordinateItemProvider geoCoordinateItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.base.GeoCoordinate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGeoCoordinateAdapter() {
		if (geoCoordinateItemProvider == null) {
			geoCoordinateItemProvider = new GeoCoordinateItemProvider(this);
		}

		return geoCoordinateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.base.CartesianCoordinate2D} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CartesianCoordinate2DItemProvider cartesianCoordinate2DItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.base.CartesianCoordinate2D}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCartesianCoordinate2DAdapter() {
		if (cartesianCoordinate2DItemProvider == null) {
			cartesianCoordinate2DItemProvider = new CartesianCoordinate2DItemProvider(this);
		}

		return cartesianCoordinate2DItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.base.CartesianCoordinate3D} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CartesianCoordinate3DItemProvider cartesianCoordinate3DItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.base.CartesianCoordinate3D}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCartesianCoordinate3DAdapter() {
		if (cartesianCoordinate3DItemProvider == null) {
			cartesianCoordinate3DItemProvider = new CartesianCoordinate3DItemProvider(this);
		}

		return cartesianCoordinate3DItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.base.PostalAddress} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PostalAddressItemProvider postalAddressItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.base.PostalAddress}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPostalAddressAdapter() {
		if (postalAddressItemProvider == null) {
			postalAddressItemProvider = new PostalAddressItemProvider(this);
		}

		return postalAddressItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.base.DigitalLocation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DigitalLocationItemProvider digitalLocationItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.base.DigitalLocation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDigitalLocationAdapter() {
		if (digitalLocationItemProvider == null) {
			digitalLocationItemProvider = new DigitalLocationItemProvider(this);
		}

		return digitalLocationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.base.PhysicalLocation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PhysicalLocationItemProvider physicalLocationItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.base.PhysicalLocation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPhysicalLocationAdapter() {
		if (physicalLocationItemProvider == null) {
			physicalLocationItemProvider = new PhysicalLocationItemProvider(this);
		}

		return physicalLocationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link java.util.Map.Entry} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StringToBStringMapEntryItemProvider stringToBStringMapEntryItemProvider;

	/**
	 * This creates an adapter for a {@link java.util.Map.Entry}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStringToBStringMapEntryAdapter() {
		if (stringToBStringMapEntryItemProvider == null) {
			stringToBStringMapEntryItemProvider = new StringToBStringMapEntryItemProvider(this);
		}

		return stringToBStringMapEntryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.base.DateTimeDescription} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DateTimeDescriptionItemProvider dateTimeDescriptionItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.base.DateTimeDescription}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDateTimeDescriptionAdapter() {
		if (dateTimeDescriptionItemProvider == null) {
			dateTimeDescriptionItemProvider = new DateTimeDescriptionItemProvider(this);
		}

		return dateTimeDescriptionItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (bObjectItemProvider != null) bObjectItemProvider.dispose();
		if (entityItemProvider != null) entityItemProvider.dispose();
		if (knowledgeBaseItemProvider != null) knowledgeBaseItemProvider.dispose();
		if (knowledgeBaseEntryItemProvider != null) knowledgeBaseEntryItemProvider.dispose();
		if (sessionItemProvider != null) sessionItemProvider.dispose();
		if (numberEntityItemProvider != null) numberEntityItemProvider.dispose();
		if (nothingItemProvider != null) nothingItemProvider.dispose();
		if (namedEntityItemProvider != null) namedEntityItemProvider.dispose();
		if (resourceItemProvider != null) resourceItemProvider.dispose();
		if (entityResourceItemProvider != null) entityResourceItemProvider.dispose();
		if (localizationResourceItemProvider != null) localizationResourceItemProvider.dispose();
		if (personItemProvider != null) personItemProvider.dispose();
		if (cyberPhysicalEnvironmentItemProvider != null) cyberPhysicalEnvironmentItemProvider.dispose();
		if (digitalResourceItemProvider != null) digitalResourceItemProvider.dispose();
		if (physicalResourceItemProvider != null) physicalResourceItemProvider.dispose();
		if (locatableEntityItemProvider != null) locatableEntityItemProvider.dispose();
		if (serviceResourceItemProvider != null) serviceResourceItemProvider.dispose();
		if (styleSheetItemProvider != null) styleSheetItemProvider.dispose();
		if (mediaResourceItemProvider != null) mediaResourceItemProvider.dispose();
		if (pictureItemProvider != null) pictureItemProvider.dispose();
		if (videoItemProvider != null) videoItemProvider.dispose();
		if (documentItemProvider != null) documentItemProvider.dispose();
		if (audioItemProvider != null) audioItemProvider.dispose();
		if (eventItemProvider != null) eventItemProvider.dispose();
		if (locationItemProvider != null) locationItemProvider.dispose();
		if (geoCoordinateItemProvider != null) geoCoordinateItemProvider.dispose();
		if (cartesianCoordinate2DItemProvider != null) cartesianCoordinate2DItemProvider.dispose();
		if (cartesianCoordinate3DItemProvider != null) cartesianCoordinate3DItemProvider.dispose();
		if (postalAddressItemProvider != null) postalAddressItemProvider.dispose();
		if (digitalLocationItemProvider != null) digitalLocationItemProvider.dispose();
		if (physicalLocationItemProvider != null) physicalLocationItemProvider.dispose();
		if (stringToBStringMapEntryItemProvider != null) stringToBStringMapEntryItemProvider.dispose();
		if (dateTimeDescriptionItemProvider != null) dateTimeDescriptionItemProvider.dispose();
	}

}
