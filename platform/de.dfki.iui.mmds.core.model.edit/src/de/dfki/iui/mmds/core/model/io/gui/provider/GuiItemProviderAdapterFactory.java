/*******************************************************************************
 * The Creative Commons CC-BY-NC 4.0 License
 * http://creativecommons.org/licenses/by-nc/4.0/legalcode
 *
 * Creative Commons (CC) by DFKI GmbH
 * - Vanessa Hahn <Vanessa.Hahn@dfki.de>
 * - Robert Nesselrath <rnesselrath@gmail.com>
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, 
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND 
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT 
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, 
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING 
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR 
 * OTHER DEALINGS IN THE SOFTWARE.
 *
 *******************************************************************************/
/**
 */
package de.dfki.iui.mmds.core.model.io.gui.provider;

import de.dfki.iui.mmds.core.model.io.gui.util.GuiAdapterFactory;
import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc --> <!--
 * end-user-doc -->
 * @generated
 */
public class GuiItemProviderAdapterFactory extends GuiAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement
	 * {@link org.eclipse.emf.edit.provider.IChangeNotifier}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance. <!-- begin-user-doc --> <!-- end-user-doc
	 * -->
	 * 
	 * @generated
	 */
	public GuiItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.GUIEvent} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected GUIEventItemProvider guiEventItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.io.gui.GUIEvent}.
	 * <!-- begin-user-doc
	 * --> <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGUIEventAdapter() {
		if (guiEventItemProvider == null) {
			guiEventItemProvider = new GUIEventItemProvider(this);
		}

		return guiEventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.GUIApplication} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected GUIApplicationItemProvider guiApplicationItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.GUIApplication}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createGUIApplicationAdapter() {
		if (guiApplicationItemProvider == null) {
			guiApplicationItemProvider = new GUIApplicationItemProvider(this);
		}

		return guiApplicationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.GUIUpdate} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected GUIUpdateItemProvider guiUpdateItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.io.gui.GUIUpdate}.
	 * <!-- begin-user-doc
	 * --> <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGUIUpdateAdapter() {
		if (guiUpdateItemProvider == null) {
			guiUpdateItemProvider = new GUIUpdateItemProvider(this);
		}

		return guiUpdateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.WindowUpdate} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected WindowUpdateItemProvider windowUpdateItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.WindowUpdate}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createWindowUpdateAdapter() {
		if (windowUpdateItemProvider == null) {
			windowUpdateItemProvider = new WindowUpdateItemProvider(this);
		}

		return windowUpdateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.io.gui.StyleSheetUpdate} instances.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	protected StyleSheetUpdateItemProvider styleSheetUpdateItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.StyleSheetUpdate}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createStyleSheetUpdateAdapter() {
		if (styleSheetUpdateItemProvider == null) {
			styleSheetUpdateItemProvider = new StyleSheetUpdateItemProvider(this);
		}

		return styleSheetUpdateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.io.gui.RemoveUIElement} instances.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	protected RemoveUIElementItemProvider removeUIElementItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.RemoveUIElement}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createRemoveUIElementAdapter() {
		if (removeUIElementItemProvider == null) {
			removeUIElementItemProvider = new RemoveUIElementItemProvider(this);
		}

		return removeUIElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.AddUIElement} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected AddUIElementItemProvider addUIElementItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.AddUIElement}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createAddUIElementAdapter() {
		if (addUIElementItemProvider == null) {
			addUIElementItemProvider = new AddUIElementItemProvider(this);
		}

		return addUIElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.io.gui.AddTableCell} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AddTableCellItemProvider addTableCellItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.io.gui.AddTableCell}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAddTableCellAdapter() {
		if (addTableCellItemProvider == null) {
			addTableCellItemProvider = new AddTableCellItemProvider(this);
		}

		return addTableCellItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.io.gui.RemoveTableCell} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RemoveTableCellItemProvider removeTableCellItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.io.gui.RemoveTableCell}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRemoveTableCellAdapter() {
		if (removeTableCellItemProvider == null) {
			removeTableCellItemProvider = new RemoveTableCellItemProvider(this);
		}

		return removeTableCellItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.io.gui.MoveUIElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MoveUIElementItemProvider moveUIElementItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.io.gui.MoveUIElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMoveUIElementAdapter() {
		if (moveUIElementItemProvider == null) {
			moveUIElementItemProvider = new MoveUIElementItemProvider(this);
		}

		return moveUIElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.SupportedEvent} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected SupportedEventItemProvider supportedEventItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.SupportedEvent}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createSupportedEventAdapter() {
		if (supportedEventItemProvider == null) {
			supportedEventItemProvider = new SupportedEventItemProvider(this);
		}

		return supportedEventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.Window} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected WindowItemProvider windowItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.io.gui.Window}.
	 * <!-- begin-user-doc
	 * --> <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWindowAdapter() {
		if (windowItemProvider == null) {
			windowItemProvider = new WindowItemProvider(this);
		}

		return windowItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.ElementAdapter} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ElementAdapterItemProvider elementAdapterItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.ElementAdapter}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createElementAdapterAdapter() {
		if (elementAdapterItemProvider == null) {
			elementAdapterItemProvider = new ElementAdapterItemProvider(this);
		}

		return elementAdapterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.AdapterMapping} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected AdapterMappingItemProvider adapterMappingItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.AdapterMapping}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createAdapterMappingAdapter() {
		if (adapterMappingItemProvider == null) {
			adapterMappingItemProvider = new AdapterMappingItemProvider(this);
		}

		return adapterMappingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.ArrayAdapter} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ArrayAdapterItemProvider arrayAdapterItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.ArrayAdapter}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createArrayAdapterAdapter() {
		if (arrayAdapterItemProvider == null) {
			arrayAdapterItemProvider = new ArrayAdapterItemProvider(this);
		}

		return arrayAdapterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.GridContainer} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected GridContainerItemProvider gridContainerItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.GridContainer}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createGridContainerAdapter() {
		if (gridContainerItemProvider == null) {
			gridContainerItemProvider = new GridContainerItemProvider(this);
		}

		return gridContainerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.Canvas} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected CanvasItemProvider canvasItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.io.gui.Canvas}.
	 * <!-- begin-user-doc
	 * --> <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCanvasAdapter() {
		if (canvasItemProvider == null) {
			canvasItemProvider = new CanvasItemProvider(this);
		}

		return canvasItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.Form} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected FormItemProvider formItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.io.gui.Form}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFormAdapter() {
		if (formItemProvider == null) {
			formItemProvider = new FormItemProvider(this);
		}

		return formItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.VBox} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected VBoxItemProvider vBoxItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.io.gui.VBox}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVBoxAdapter() {
		if (vBoxItemProvider == null) {
			vBoxItemProvider = new VBoxItemProvider(this);
		}

		return vBoxItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.HBox} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected HBoxItemProvider hBoxItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.io.gui.HBox}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHBoxAdapter() {
		if (hBoxItemProvider == null) {
			hBoxItemProvider = new HBoxItemProvider(this);
		}

		return hBoxItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.io.gui.Div} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DivItemProvider divItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.io.gui.Div}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDivAdapter() {
		if (divItemProvider == null) {
			divItemProvider = new DivItemProvider(this);
		}

		return divItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.GridRow} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected GridRowItemProvider gridRowItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.io.gui.GridRow}.
	 * <!-- begin-user-doc
	 * --> <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGridRowAdapter() {
		if (gridRowItemProvider == null) {
			gridRowItemProvider = new GridRowItemProvider(this);
		}

		return gridRowItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.GridItem} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected GridItemItemProvider gridItemItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.io.gui.GridItem}.
	 * <!-- begin-user-doc
	 * --> <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGridItemAdapter() {
		if (gridItemItemProvider == null) {
			gridItemItemProvider = new GridItemItemProvider(this);
		}

		return gridItemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.GridHeaderItem} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected GridHeaderItemItemProvider gridHeaderItemItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.GridHeaderItem}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createGridHeaderItemAdapter() {
		if (gridHeaderItemItemProvider == null) {
			gridHeaderItemItemProvider = new GridHeaderItemItemProvider(this);
		}

		return gridHeaderItemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.HTMLView} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected HTMLViewItemProvider htmlViewItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.io.gui.HTMLView}.
	 * <!-- begin-user-doc
	 * --> <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHTMLViewAdapter() {
		if (htmlViewItemProvider == null) {
			htmlViewItemProvider = new HTMLViewItemProvider(this);
		}

		return htmlViewItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.io.gui.DisplayContextView} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DisplayContextViewItemProvider displayContextViewItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.io.gui.DisplayContextView}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDisplayContextViewAdapter() {
		if (displayContextViewItemProvider == null) {
			displayContextViewItemProvider = new DisplayContextViewItemProvider(this);
		}

		return displayContextViewItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.Margin} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected MarginItemProvider marginItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.io.gui.Margin}.
	 * <!-- begin-user-doc
	 * --> <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMarginAdapter() {
		if (marginItemProvider == null) {
			marginItemProvider = new MarginItemProvider(this);
		}

		return marginItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.Size} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected SizeItemProvider sizeItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.io.gui.Size}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSizeAdapter() {
		if (sizeItemProvider == null) {
			sizeItemProvider = new SizeItemProvider(this);
		}

		return sizeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.AbsoluteLayout} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected AbsoluteLayoutItemProvider absoluteLayoutItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.AbsoluteLayout}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createAbsoluteLayoutAdapter() {
		if (absoluteLayoutItemProvider == null) {
			absoluteLayoutItemProvider = new AbsoluteLayoutItemProvider(this);
		}

		return absoluteLayoutItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.FlowLayout} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected FlowLayoutItemProvider flowLayoutItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.FlowLayout}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createFlowLayoutAdapter() {
		if (flowLayoutItemProvider == null) {
			flowLayoutItemProvider = new FlowLayoutItemProvider(this);
		}

		return flowLayoutItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.ToolTip} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ToolTipItemProvider toolTipItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.io.gui.ToolTip}.
	 * <!-- begin-user-doc
	 * --> <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createToolTipAdapter() {
		if (toolTipItemProvider == null) {
			toolTipItemProvider = new ToolTipItemProvider(this);
		}

		return toolTipItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.Label} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected LabelItemProvider labelItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.io.gui.Label}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLabelAdapter() {
		if (labelItemProvider == null) {
			labelItemProvider = new LabelItemProvider(this);
		}

		return labelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.TextInput} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected TextInputItemProvider textInputItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.io.gui.TextInput}.
	 * <!-- begin-user-doc
	 * --> <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTextInputAdapter() {
		if (textInputItemProvider == null) {
			textInputItemProvider = new TextInputItemProvider(this);
		}

		return textInputItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.io.gui.LabeledTextInput} instances.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	protected LabeledTextInputItemProvider labeledTextInputItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.LabeledTextInput}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createLabeledTextInputAdapter() {
		if (labeledTextInputItemProvider == null) {
			labeledTextInputItemProvider = new LabeledTextInputItemProvider(this);
		}

		return labeledTextInputItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.RichTextInput} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected RichTextInputItemProvider richTextInputItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.RichTextInput}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createRichTextInputAdapter() {
		if (richTextInputItemProvider == null) {
			richTextInputItemProvider = new RichTextInputItemProvider(this);
		}

		return richTextInputItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.List} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ListItemProvider listItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.io.gui.List}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createListAdapter() {
		if (listItemProvider == null) {
			listItemProvider = new ListItemProvider(this);
		}

		return listItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.ListItem} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ListItemItemProvider listItemItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.io.gui.ListItem}.
	 * <!-- begin-user-doc
	 * --> <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createListItemAdapter() {
		if (listItemItemProvider == null) {
			listItemItemProvider = new ListItemItemProvider(this);
		}

		return listItemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.ComboBox} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ComboBoxItemProvider comboBoxItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.io.gui.ComboBox}.
	 * <!-- begin-user-doc
	 * --> <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createComboBoxAdapter() {
		if (comboBoxItemProvider == null) {
			comboBoxItemProvider = new ComboBoxItemProvider(this);
		}

		return comboBoxItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.Button} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ButtonItemProvider buttonItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.io.gui.Button}.
	 * <!-- begin-user-doc
	 * --> <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createButtonAdapter() {
		if (buttonItemProvider == null) {
			buttonItemProvider = new ButtonItemProvider(this);
		}

		return buttonItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.SubmitButton} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected SubmitButtonItemProvider submitButtonItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.SubmitButton}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createSubmitButtonAdapter() {
		if (submitButtonItemProvider == null) {
			submitButtonItemProvider = new SubmitButtonItemProvider(this);
		}

		return submitButtonItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.CheckBox} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected CheckBoxItemProvider checkBoxItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.io.gui.CheckBox}.
	 * <!-- begin-user-doc
	 * --> <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCheckBoxAdapter() {
		if (checkBoxItemProvider == null) {
			checkBoxItemProvider = new CheckBoxItemProvider(this);
		}

		return checkBoxItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.RadioButton} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected RadioButtonItemProvider radioButtonItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.RadioButton}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createRadioButtonAdapter() {
		if (radioButtonItemProvider == null) {
			radioButtonItemProvider = new RadioButtonItemProvider(this);
		}

		return radioButtonItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.ToggleButton} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ToggleButtonItemProvider toggleButtonItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.ToggleButton}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createToggleButtonAdapter() {
		if (toggleButtonItemProvider == null) {
			toggleButtonItemProvider = new ToggleButtonItemProvider(this);
		}

		return toggleButtonItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.ImageButton} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ImageButtonItemProvider imageButtonItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.ImageButton}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createImageButtonAdapter() {
		if (imageButtonItemProvider == null) {
			imageButtonItemProvider = new ImageButtonItemProvider(this);
		}

		return imageButtonItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.ButtonBar} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ButtonBarItemProvider buttonBarItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.io.gui.ButtonBar}.
	 * <!-- begin-user-doc
	 * --> <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createButtonBarAdapter() {
		if (buttonBarItemProvider == null) {
			buttonBarItemProvider = new ButtonBarItemProvider(this);
		}

		return buttonBarItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.ColorPicker} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ColorPickerItemProvider colorPickerItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.ColorPicker}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createColorPickerAdapter() {
		if (colorPickerItemProvider == null) {
			colorPickerItemProvider = new ColorPickerItemProvider(this);
		}

		return colorPickerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.ProgressBar} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ProgressBarItemProvider progressBarItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.ProgressBar}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createProgressBarAdapter() {
		if (progressBarItemProvider == null) {
			progressBarItemProvider = new ProgressBarItemProvider(this);
		}

		return progressBarItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.Image} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ImageItemProvider imageItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.io.gui.Image}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImageAdapter() {
		if (imageItemProvider == null) {
			imageItemProvider = new ImageItemProvider(this);
		}

		return imageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.ImageGallery} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ImageGalleryItemProvider imageGalleryItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.ImageGallery}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createImageGalleryAdapter() {
		if (imageGalleryItemProvider == null) {
			imageGalleryItemProvider = new ImageGalleryItemProvider(this);
		}

		return imageGalleryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.MediaPlayer} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected MediaPlayerItemProvider mediaPlayerItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.MediaPlayer}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createMediaPlayerAdapter() {
		if (mediaPlayerItemProvider == null) {
			mediaPlayerItemProvider = new MediaPlayerItemProvider(this);
		}

		return mediaPlayerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.NumericStepper} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected NumericStepperItemProvider numericStepperItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.NumericStepper}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createNumericStepperAdapter() {
		if (numericStepperItemProvider == null) {
			numericStepperItemProvider = new NumericStepperItemProvider(this);
		}

		return numericStepperItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.Scrollbar} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ScrollbarItemProvider scrollbarItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.io.gui.Scrollbar}.
	 * <!-- begin-user-doc
	 * --> <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createScrollbarAdapter() {
		if (scrollbarItemProvider == null) {
			scrollbarItemProvider = new ScrollbarItemProvider(this);
		}

		return scrollbarItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.CalendarView} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected CalendarViewItemProvider calendarViewItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.CalendarView}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createCalendarViewAdapter() {
		if (calendarViewItemProvider == null) {
			calendarViewItemProvider = new CalendarViewItemProvider(this);
		}

		return calendarViewItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.SoftKeyboard} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected SoftKeyboardItemProvider softKeyboardItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.SoftKeyboard}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createSoftKeyboardAdapter() {
		if (softKeyboardItemProvider == null) {
			softKeyboardItemProvider = new SoftKeyboardItemProvider(this);
		}

		return softKeyboardItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.DialogBox} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected DialogBoxItemProvider dialogBoxItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.io.gui.DialogBox}.
	 * <!-- begin-user-doc
	 * --> <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDialogBoxAdapter() {
		if (dialogBoxItemProvider == null) {
			dialogBoxItemProvider = new DialogBoxItemProvider(this);
		}

		return dialogBoxItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.CustomDialog} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected CustomDialogItemProvider customDialogItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.CustomDialog}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createCustomDialogAdapter() {
		if (customDialogItemProvider == null) {
			customDialogItemProvider = new CustomDialogItemProvider(this);
		}

		return customDialogItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.FileChooser} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected FileChooserItemProvider fileChooserItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.FileChooser}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createFileChooserAdapter() {
		if (fileChooserItemProvider == null) {
			fileChooserItemProvider = new FileChooserItemProvider(this);
		}

		return fileChooserItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.TabItem} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected TabItemItemProvider tabItemItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.io.gui.TabItem}.
	 * <!-- begin-user-doc
	 * --> <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTabItemAdapter() {
		if (tabItemItemProvider == null) {
			tabItemItemProvider = new TabItemItemProvider(this);
		}

		return tabItemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.TabView} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected TabViewItemProvider tabViewItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.io.gui.TabView}.
	 * <!-- begin-user-doc
	 * --> <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTabViewAdapter() {
		if (tabViewItemProvider == null) {
			tabViewItemProvider = new TabViewItemProvider(this);
		}

		return tabViewItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.io.gui.TextInputUpdate} instances.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	protected TextInputUpdateItemProvider textInputUpdateItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.TextInputUpdate}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createTextInputUpdateAdapter() {
		if (textInputUpdateItemProvider == null) {
			textInputUpdateItemProvider = new TextInputUpdateItemProvider(this);
		}

		return textInputUpdateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.io.gui.LabeledTextInputUpdate} instances.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	protected LabeledTextInputUpdateItemProvider labeledTextInputUpdateItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.LabeledTextInputUpdate}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createLabeledTextInputUpdateAdapter() {
		if (labeledTextInputUpdateItemProvider == null) {
			labeledTextInputUpdateItemProvider = new LabeledTextInputUpdateItemProvider(this);
		}

		return labeledTextInputUpdateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.io.gui.RichTextInputUpdate} instances.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	protected RichTextInputUpdateItemProvider richTextInputUpdateItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.RichTextInputUpdate}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createRichTextInputUpdateAdapter() {
		if (richTextInputUpdateItemProvider == null) {
			richTextInputUpdateItemProvider = new RichTextInputUpdateItemProvider(this);
		}

		return richTextInputUpdateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.io.gui.ColorPickerUpdate} instances.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	protected ColorPickerUpdateItemProvider colorPickerUpdateItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.ColorPickerUpdate}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createColorPickerUpdateAdapter() {
		if (colorPickerUpdateItemProvider == null) {
			colorPickerUpdateItemProvider = new ColorPickerUpdateItemProvider(this);
		}

		return colorPickerUpdateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.LabelUpdate} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected LabelUpdateItemProvider labelUpdateItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.LabelUpdate}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createLabelUpdateAdapter() {
		if (labelUpdateItemProvider == null) {
			labelUpdateItemProvider = new LabelUpdateItemProvider(this);
		}

		return labelUpdateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.ListUpdate} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ListUpdateItemProvider listUpdateItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.ListUpdate}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createListUpdateAdapter() {
		if (listUpdateItemProvider == null) {
			listUpdateItemProvider = new ListUpdateItemProvider(this);
		}

		return listUpdateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.ComboboxUpdate} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ComboboxUpdateItemProvider comboboxUpdateItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.ComboboxUpdate}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createComboboxUpdateAdapter() {
		if (comboboxUpdateItemProvider == null) {
			comboboxUpdateItemProvider = new ComboboxUpdateItemProvider(this);
		}

		return comboboxUpdateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.ListItemUpdate} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ListItemUpdateItemProvider listItemUpdateItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.ListItemUpdate}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createListItemUpdateAdapter() {
		if (listItemUpdateItemProvider == null) {
			listItemUpdateItemProvider = new ListItemUpdateItemProvider(this);
		}

		return listItemUpdateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.ButtonUpdate} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ButtonUpdateItemProvider buttonUpdateItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.ButtonUpdate}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createButtonUpdateAdapter() {
		if (buttonUpdateItemProvider == null) {
			buttonUpdateItemProvider = new ButtonUpdateItemProvider(this);
		}

		return buttonUpdateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.io.gui.SubmitButtonUpdate} instances.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	protected SubmitButtonUpdateItemProvider submitButtonUpdateItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.SubmitButtonUpdate}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createSubmitButtonUpdateAdapter() {
		if (submitButtonUpdateItemProvider == null) {
			submitButtonUpdateItemProvider = new SubmitButtonUpdateItemProvider(this);
		}

		return submitButtonUpdateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.CheckBoxUpdate} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected CheckBoxUpdateItemProvider checkBoxUpdateItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.CheckBoxUpdate}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createCheckBoxUpdateAdapter() {
		if (checkBoxUpdateItemProvider == null) {
			checkBoxUpdateItemProvider = new CheckBoxUpdateItemProvider(this);
		}

		return checkBoxUpdateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.io.gui.RadioButtonUpdate} instances.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	protected RadioButtonUpdateItemProvider radioButtonUpdateItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.RadioButtonUpdate}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createRadioButtonUpdateAdapter() {
		if (radioButtonUpdateItemProvider == null) {
			radioButtonUpdateItemProvider = new RadioButtonUpdateItemProvider(this);
		}

		return radioButtonUpdateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.io.gui.ImageButtonUpdate} instances.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	protected ImageButtonUpdateItemProvider imageButtonUpdateItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.ImageButtonUpdate}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createImageButtonUpdateAdapter() {
		if (imageButtonUpdateItemProvider == null) {
			imageButtonUpdateItemProvider = new ImageButtonUpdateItemProvider(this);
		}

		return imageButtonUpdateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.io.gui.ToggleButtonUpdate} instances.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	protected ToggleButtonUpdateItemProvider toggleButtonUpdateItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.ToggleButtonUpdate}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createToggleButtonUpdateAdapter() {
		if (toggleButtonUpdateItemProvider == null) {
			toggleButtonUpdateItemProvider = new ToggleButtonUpdateItemProvider(this);
		}

		return toggleButtonUpdateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.io.gui.GridContainerUpdate} instances.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	protected GridContainerUpdateItemProvider gridContainerUpdateItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.GridContainerUpdate}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createGridContainerUpdateAdapter() {
		if (gridContainerUpdateItemProvider == null) {
			gridContainerUpdateItemProvider = new GridContainerUpdateItemProvider(this);
		}

		return gridContainerUpdateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.CanvasUpdate} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected CanvasUpdateItemProvider canvasUpdateItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.CanvasUpdate}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createCanvasUpdateAdapter() {
		if (canvasUpdateItemProvider == null) {
			canvasUpdateItemProvider = new CanvasUpdateItemProvider(this);
		}

		return canvasUpdateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.FormUpdate} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected FormUpdateItemProvider formUpdateItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.FormUpdate}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createFormUpdateAdapter() {
		if (formUpdateItemProvider == null) {
			formUpdateItemProvider = new FormUpdateItemProvider(this);
		}

		return formUpdateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.VBoxUpdate} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected VBoxUpdateItemProvider vBoxUpdateItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.VBoxUpdate}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createVBoxUpdateAdapter() {
		if (vBoxUpdateItemProvider == null) {
			vBoxUpdateItemProvider = new VBoxUpdateItemProvider(this);
		}

		return vBoxUpdateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.HBoxUpdate} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected HBoxUpdateItemProvider hBoxUpdateItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.HBoxUpdate}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createHBoxUpdateAdapter() {
		if (hBoxUpdateItemProvider == null) {
			hBoxUpdateItemProvider = new HBoxUpdateItemProvider(this);
		}

		return hBoxUpdateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.HtmlViewUpdate} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected HtmlViewUpdateItemProvider htmlViewUpdateItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.HtmlViewUpdate}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createHtmlViewUpdateAdapter() {
		if (htmlViewUpdateItemProvider == null) {
			htmlViewUpdateItemProvider = new HtmlViewUpdateItemProvider(this);
		}

		return htmlViewUpdateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.TabItemUpdate} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected TabItemUpdateItemProvider tabItemUpdateItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.TabItemUpdate}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createTabItemUpdateAdapter() {
		if (tabItemUpdateItemProvider == null) {
			tabItemUpdateItemProvider = new TabItemUpdateItemProvider(this);
		}

		return tabItemUpdateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.ImageUpdate} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ImageUpdateItemProvider imageUpdateItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.ImageUpdate}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createImageUpdateAdapter() {
		if (imageUpdateItemProvider == null) {
			imageUpdateItemProvider = new ImageUpdateItemProvider(this);
		}

		return imageUpdateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link de.dfki.iui.mmds.core.model.io.gui.DialogUpdate} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected DialogUpdateItemProvider dialogUpdateItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.DialogUpdate}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createDialogUpdateAdapter() {
		if (dialogUpdateItemProvider == null) {
			dialogUpdateItemProvider = new DialogUpdateItemProvider(this);
		}

		return dialogUpdateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.io.gui.ProgressBarUpdate} instances.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	protected ProgressBarUpdateItemProvider progressBarUpdateItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link de.dfki.iui.mmds.core.model.io.gui.ProgressBarUpdate}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createProgressBarUpdateAdapter() {
		if (progressBarUpdateItemProvider == null) {
			progressBarUpdateItemProvider = new ProgressBarUpdateItemProvider(this);
		}

		return progressBarUpdateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.io.gui.JavaScriptUpdate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JavaScriptUpdateItemProvider javaScriptUpdateItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.io.gui.JavaScriptUpdate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createJavaScriptUpdateAdapter() {
		if (javaScriptUpdateItemProvider == null) {
			javaScriptUpdateItemProvider = new JavaScriptUpdateItemProvider(this);
		}

		return javaScriptUpdateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.mmds.core.model.io.gui.GuiPlugin} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GuiPluginItemProvider guiPluginItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.mmds.core.model.io.gui.GuiPlugin}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGuiPluginAdapter() {
		if (guiPluginItemProvider == null) {
			guiPluginItemProvider = new GuiPluginItemProvider(this);
		}

		return guiPluginItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to
	 * {@link #parentAdapterFactory}. <!-- begin-user-doc --> <!-- end-user-doc
	 * -->
	 * 
	 * @generated
	 */
	@Override
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public void dispose() {
		if (guiEventItemProvider != null) guiEventItemProvider.dispose();
		if (guiApplicationItemProvider != null) guiApplicationItemProvider.dispose();
		if (guiUpdateItemProvider != null) guiUpdateItemProvider.dispose();
		if (windowUpdateItemProvider != null) windowUpdateItemProvider.dispose();
		if (styleSheetUpdateItemProvider != null) styleSheetUpdateItemProvider.dispose();
		if (removeUIElementItemProvider != null) removeUIElementItemProvider.dispose();
		if (addUIElementItemProvider != null) addUIElementItemProvider.dispose();
		if (addTableCellItemProvider != null) addTableCellItemProvider.dispose();
		if (removeTableCellItemProvider != null) removeTableCellItemProvider.dispose();
		if (moveUIElementItemProvider != null) moveUIElementItemProvider.dispose();
		if (supportedEventItemProvider != null) supportedEventItemProvider.dispose();
		if (windowItemProvider != null) windowItemProvider.dispose();
		if (elementAdapterItemProvider != null) elementAdapterItemProvider.dispose();
		if (adapterMappingItemProvider != null) adapterMappingItemProvider.dispose();
		if (arrayAdapterItemProvider != null) arrayAdapterItemProvider.dispose();
		if (gridContainerItemProvider != null) gridContainerItemProvider.dispose();
		if (canvasItemProvider != null) canvasItemProvider.dispose();
		if (formItemProvider != null) formItemProvider.dispose();
		if (vBoxItemProvider != null) vBoxItemProvider.dispose();
		if (hBoxItemProvider != null) hBoxItemProvider.dispose();
		if (divItemProvider != null) divItemProvider.dispose();
		if (gridRowItemProvider != null) gridRowItemProvider.dispose();
		if (gridItemItemProvider != null) gridItemItemProvider.dispose();
		if (gridHeaderItemItemProvider != null) gridHeaderItemItemProvider.dispose();
		if (htmlViewItemProvider != null) htmlViewItemProvider.dispose();
		if (displayContextViewItemProvider != null) displayContextViewItemProvider.dispose();
		if (marginItemProvider != null) marginItemProvider.dispose();
		if (sizeItemProvider != null) sizeItemProvider.dispose();
		if (absoluteLayoutItemProvider != null) absoluteLayoutItemProvider.dispose();
		if (flowLayoutItemProvider != null) flowLayoutItemProvider.dispose();
		if (toolTipItemProvider != null) toolTipItemProvider.dispose();
		if (labelItemProvider != null) labelItemProvider.dispose();
		if (textInputItemProvider != null) textInputItemProvider.dispose();
		if (labeledTextInputItemProvider != null) labeledTextInputItemProvider.dispose();
		if (richTextInputItemProvider != null) richTextInputItemProvider.dispose();
		if (listItemProvider != null) listItemProvider.dispose();
		if (listItemItemProvider != null) listItemItemProvider.dispose();
		if (comboBoxItemProvider != null) comboBoxItemProvider.dispose();
		if (buttonItemProvider != null) buttonItemProvider.dispose();
		if (submitButtonItemProvider != null) submitButtonItemProvider.dispose();
		if (checkBoxItemProvider != null) checkBoxItemProvider.dispose();
		if (radioButtonItemProvider != null) radioButtonItemProvider.dispose();
		if (toggleButtonItemProvider != null) toggleButtonItemProvider.dispose();
		if (imageButtonItemProvider != null) imageButtonItemProvider.dispose();
		if (buttonBarItemProvider != null) buttonBarItemProvider.dispose();
		if (colorPickerItemProvider != null) colorPickerItemProvider.dispose();
		if (progressBarItemProvider != null) progressBarItemProvider.dispose();
		if (imageItemProvider != null) imageItemProvider.dispose();
		if (imageGalleryItemProvider != null) imageGalleryItemProvider.dispose();
		if (mediaPlayerItemProvider != null) mediaPlayerItemProvider.dispose();
		if (numericStepperItemProvider != null) numericStepperItemProvider.dispose();
		if (scrollbarItemProvider != null) scrollbarItemProvider.dispose();
		if (calendarViewItemProvider != null) calendarViewItemProvider.dispose();
		if (softKeyboardItemProvider != null) softKeyboardItemProvider.dispose();
		if (dialogBoxItemProvider != null) dialogBoxItemProvider.dispose();
		if (customDialogItemProvider != null) customDialogItemProvider.dispose();
		if (fileChooserItemProvider != null) fileChooserItemProvider.dispose();
		if (tabItemItemProvider != null) tabItemItemProvider.dispose();
		if (tabViewItemProvider != null) tabViewItemProvider.dispose();
		if (textInputUpdateItemProvider != null) textInputUpdateItemProvider.dispose();
		if (labeledTextInputUpdateItemProvider != null) labeledTextInputUpdateItemProvider.dispose();
		if (richTextInputUpdateItemProvider != null) richTextInputUpdateItemProvider.dispose();
		if (colorPickerUpdateItemProvider != null) colorPickerUpdateItemProvider.dispose();
		if (labelUpdateItemProvider != null) labelUpdateItemProvider.dispose();
		if (listUpdateItemProvider != null) listUpdateItemProvider.dispose();
		if (comboboxUpdateItemProvider != null) comboboxUpdateItemProvider.dispose();
		if (listItemUpdateItemProvider != null) listItemUpdateItemProvider.dispose();
		if (buttonUpdateItemProvider != null) buttonUpdateItemProvider.dispose();
		if (submitButtonUpdateItemProvider != null) submitButtonUpdateItemProvider.dispose();
		if (checkBoxUpdateItemProvider != null) checkBoxUpdateItemProvider.dispose();
		if (radioButtonUpdateItemProvider != null) radioButtonUpdateItemProvider.dispose();
		if (imageButtonUpdateItemProvider != null) imageButtonUpdateItemProvider.dispose();
		if (toggleButtonUpdateItemProvider != null) toggleButtonUpdateItemProvider.dispose();
		if (gridContainerUpdateItemProvider != null) gridContainerUpdateItemProvider.dispose();
		if (canvasUpdateItemProvider != null) canvasUpdateItemProvider.dispose();
		if (formUpdateItemProvider != null) formUpdateItemProvider.dispose();
		if (vBoxUpdateItemProvider != null) vBoxUpdateItemProvider.dispose();
		if (hBoxUpdateItemProvider != null) hBoxUpdateItemProvider.dispose();
		if (htmlViewUpdateItemProvider != null) htmlViewUpdateItemProvider.dispose();
		if (tabItemUpdateItemProvider != null) tabItemUpdateItemProvider.dispose();
		if (imageUpdateItemProvider != null) imageUpdateItemProvider.dispose();
		if (dialogUpdateItemProvider != null) dialogUpdateItemProvider.dispose();
		if (progressBarUpdateItemProvider != null) progressBarUpdateItemProvider.dispose();
		if (javaScriptUpdateItemProvider != null) javaScriptUpdateItemProvider.dispose();
		if (guiPluginItemProvider != null) guiPluginItemProvider.dispose();
	}

}
